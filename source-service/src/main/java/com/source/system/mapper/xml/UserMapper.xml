<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.source.system.mapper.UserMapper">

	<!-- 开启二级缓存 -->
<!-- 	<cache type="org.mybatis.caches.ehcache.LoggingEhcache"/> -->

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="com.source.system.entity.User">
		<id column="id" property="id" />
		<result column="avatar" property="avatar" />
		<result column="account" property="account" />
		<result column="password" property="password" />
		<result column="salt" property="salt" />
		<result column="name" property="name" />
		<result column="birthday" property="birthday" />
		<result column="sex" property="sex" />
		<result column="email" property="email" />
		<result column="phone" property="phone" />
		<result column="roleid" property="roleid" />
		<result column="deptid" property="deptid" />
		<result column="status" property="status" />
		<result column="version" property="version" />
		<result column="create_time" property="createTime" />
		<result column="update_time" property="updateTime" />
	</resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, avatar, account, salt, name, birthday, sex,
         email, phone, roleid, deptid, status, version, create_time AS createTime, update_time AS updateTime
    </sql>
    
     <sql id="Base_Column_List_With_Pwd">
        id, avatar, account, password, salt, name, birthday, sex,
         email, phone, roleid, deptid, status, version, create_time AS createTime, update_time AS updateTime
    </sql>

	<select id="selectUsers" resultType="map">
		select
		<include refid="Base_Column_List" />
		from sys_user
		where status != 3
		<if test="name != null and name != ''">
			and (phone like CONCAT('%',#{name},'%')
			or account like CONCAT('%',#{name},'%')
			or name like CONCAT('%',#{name},'%'))
		</if>
		<if test="deptid != null and deptid != 0">
			and deptid = #{deptid}
		</if>
		<if test="beginTime != null and beginTime != '' and endTime != null and endTime != ''">
			and (createTime between CONCAT(#{beginTime},' 00:00:00') and CONCAT(#{endTime},' 23:59:59'))
		</if>
            <if test="gender != 0 and gender !=null and gender !=''">
                and sex = #{gender}
            </if>
            <if test="mobile !=null and mobile !=''">
                and `phone` = #{mobile}
            </if>
	</select>
	
	<!-- 根据部门获取用户列表 -->
	<select id="selectUsersByDeptid" resultType="user">
		select
		<include refid="Base_Column_List" />
		from sys_user
		where status != 3
		<if test="name != null and name != ''">
			and (phone like CONCAT('%',#{name},'%')
			or account like CONCAT('%',#{name},'%')
			or name like CONCAT('%',#{name},'%'))
		</if>
		<if test="deptid != null and deptid != 0">
			and deptid = #{deptid}
		</if>
		<if test="beginTime != null and beginTime != '' and endTime != null and endTime != ''">
			and (createTime between CONCAT(#{beginTime},' 00:00:00') and CONCAT(#{endTime},' 23:59:59'))
		</if>
	</select>
	
	
	 <select id="findUser" resultMap="BaseResultMap" resultType="user">
        select * from sys_user
        <where>
            <if test="request != null and request.username !=null and request.username !=''">
                username = #{request.username}
            </if>
            <if test="request != null and request.gender !=null and request.gender !=''">
                and gender = #{request.gender}
            </if>
            <if test="request != null and request.status !=null and request.status !=''">
                and `status` = #{request.status}
            </if>
        </where>
    </select>

	<update id="setStatus">
		update sys_user set status = #{status} where id =
		#{userId}
	</update>

	<update id="changePwd">
		update sys_user set password = #{pwd} where id =
		#{userId}
	</update>
	
	<update id="setRoles">
		update sys_user set roleid = #{roleIds} where id =
		#{userId}
	</update>
	
	<select id="getByAccount" resultType="user">
		select
		<include refid="Base_Column_List_With_Pwd" />
		from sys_user where account = #{account} and status != 3
	</select>

</mapper>
